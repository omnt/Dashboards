{
  "__inputs": [
    {
      "name": "DS_INFLUXDB",
      "label": "InfluxDB",
      "description": "",
      "type": "datasource",
      "pluginId": "influxdb",
      "pluginName": "InfluxDB"
    }
  ],
  "__elements": {
    "c9c52a7f-fa31-446d-8b9f-6790a081a0c3": {
      "name": "Position",
      "uid": "c9c52a7f-fa31-446d-8b9f-6790a081a0c3",
      "kind": 1,
      "model": {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "text",
              "mode": "continuous-GrYlRd"
            },
            "custom": {
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              }
            },
            "links": [
              {
                "targetBlank": true,
                "title": "Details",
                "url": "http://10.30.100.25:3000/d/d738fce4-722f-47d4-8163-76b135642525/detail-4g?orgId=1\n&${__all_variables}"
              }
            ],
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "red",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "latitude"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Latitude"
                },
                {
                  "id": "decimals",
                  "value": 8
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "longitude"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Longitude"
                },
                {
                  "id": "decimals",
                  "value": 8
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "altitude"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Altitude"
                },
                {
                  "id": "decimals",
                  "value": 8
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "_time"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Time"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "device"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "mode": "palette-classic-by-name"
                  }
                }
              ]
            }
          ]
        },
        "options": {
          "basemap": {
            "config": {
              "server": "world-imagery"
            },
            "name": "Layer 0",
            "opacity": 0.4,
            "tooltip": false,
            "type": "esri-xyz"
          },
          "controls": {
            "mouseWheelZoom": false,
            "showAttribution": true,
            "showDebug": false,
            "showMeasure": true,
            "showScale": true,
            "showZoom": true
          },
          "layers": [
            {
              "config": {
                "showLegend": true,
                "style": {
                  "color": {
                    "fixed": "text"
                  },
                  "opacity": 1,
                  "rotation": {
                    "fixed": 0,
                    "max": 360,
                    "min": -360,
                    "mode": "mod"
                  },
                  "size": {
                    "fixed": 7,
                    "max": 15,
                    "min": 2
                  },
                  "symbol": {
                    "fixed": "img/icons/marker/circle.svg",
                    "mode": "fixed"
                  },
                  "text": {
                    "field": "device",
                    "fixed": "",
                    "mode": "field"
                  },
                  "textConfig": {
                    "fontSize": 24,
                    "offsetX": 18,
                    "offsetY": 6,
                    "textAlign": "right",
                    "textBaseline": "top"
                  }
                }
              },
              "filterData": {
                "id": "byRefId",
                "options": "A"
              },
              "name": "Device",
              "opacity": 1,
              "tooltip": true,
              "type": "markers"
            }
          ],
          "tooltip": {
            "mode": "details"
          },
          "view": {
            "allLayers": true,
            "id": "fit",
            "lastOnly": false,
            "lat": 51.528843,
            "layer": "RSRP",
            "lon": 7.204273,
            "shared": true,
            "zoom": 18
          }
        },
        "pluginVersion": "11.0.0-preview",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "Ckrwhbn4k"
            },
            "hide": false,
            "query": "location = from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Location\")\n  |> filter(fn: (r) => r[\"_field\"] == \"altitude\" or r[\"_field\"] == \"latitude\" or r[\"_field\"] == \"longitude\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"device\"] =~ /${device:regex}/)\n  |> drop(columns: [\"CI\", \"_measurement\", \"_start\", \"_stop\"])\n  |> aggregateWindow(every: ${Interval}, fn: last, createEmpty: false)\n  |> last()\n      \n\nsignal = from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${api_call}\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"SSRSRP\" \n                    or r[\"_field\"] == \"SSRSRQ\" \n                    or r[\"_field\"] == \"SSSINR\" \n                    or r[\"_field\"] == \"RSRP\"\n                    or r[\"_field\"] == \"RSRQ\"\n                    or r[\"_field\"] == \"RSSI\"\n                    or r[\"_field\"] == \"SINR\"\n                    or r[\"_field\"] == \"Level\")\n  |> filter(fn: (r) => r[\"device\"] =~ /${device:regex}/)\n  |> drop(columns: [\"CI\", \"_measurement\", \"_start\", \"_stop\"])\n  |> aggregateWindow(every: ${Interval}, fn: mean, createEmpty: false)\n  |> last()\n  \n\nPCI = from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"CellInformation\")\n  |> filter(fn: (r) => r[\"_field\"] == \"PCI\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"device\"] =~ /${device:regex}/)\n  |> drop(columns: [\"CI\", \"_measurement\", \"_start\", \"_stop\"])\n  |> aggregateWindow(every: ${Interval}, fn: last, createEmpty: false)\n  |> last()\n    \n\n\nunion(tables: [location, signal, PCI])\n    |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> sort(columns: [\"_time\"])\n    |> keep(columns: [\"SSRSRP\", \"SSRSRQ\", \"RSRP\", \"RSRQ\", \"RSSI\", \"SINR\", \"device\", \"altitude\", \"longitude\", \"latitude\", \"PCI\", \"_time\", \"Level\"])\n    |> group()\n    \n",
            "refId": "A"
          }
        ],
        "title": "Position",
        "type": "geomap"
      }
    },
    "f88544f3-76de-44a9-a6e7-237a42ba136d": {
      "name": "Speed",
      "uid": "f88544f3-76de-44a9-a6e7-237a42ba136d",
      "kind": 1,
      "model": {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#4fadc2",
              "mode": "fixed"
            },
            "decimals": 1,
            "displayName": "${__field.labels.device}",
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "velocityms"
          },
          "overrides": []
        },
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "text": {},
          "textMode": "value_and_name"
        },
        "pluginVersion": "10.1.2",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "Ckrwhbn4k"
            },
            "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Location\")\n  |> filter(fn: (r) => r[\"_field\"] == \"speed\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"device\"] =~ /${device:regex}/)\n  |> group(columns: [\"device\"])\n  |> last()",
            "refId": "A"
          }
        ],
        "title": "Speed",
        "type": "stat"
      }
    },
    "f29c140e-6975-41c2-a906-7ee5f40e8156": {
      "name": "Altitude",
      "uid": "f29c140e-6975-41c2-a906-7ee5f40e8156",
      "kind": 1,
      "model": {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "#4fadc2",
              "mode": "fixed"
            },
            "displayName": "${__field.labels.device}",
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "lengthm"
          },
          "overrides": []
        },
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "text": {},
          "textMode": "auto"
        },
        "pluginVersion": "10.1.2",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "Ckrwhbn4k"
            },
            "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Location\")\n  |> filter(fn: (r) => r[\"_field\"] == \"altitude\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"device\"] =~ /${device:regex}/)\n  |> group(columns: [\"device\"])\n  |> last()",
            "refId": "A"
          }
        ],
        "title": "Altitude",
        "type": "stat"
      }
    },
    "c92ace65-7b23-4c71-9dee-431610ad969d": {
      "name": "RSRP quick",
      "uid": "c92ace65-7b23-4c71-9dee-431610ad969d",
      "kind": 1,
      "model": {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 1,
            "displayName": "${__field.labels.device}",
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "dBm"
          },
          "overrides": []
        },
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "text": {},
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.0.0-preview",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "Ckrwhbn4k"
            },
            "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${api_call}\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"SSRSRP\" or r[\"_field\"] == \"RSRP\")\n  |> filter(fn: (r) => r._value > -200)\n  |> filter(fn: (r) => r._value < -10)\n  |> filter(fn: (r) => r[\"device\"] =~ /${device:regex}/)\n  |> drop(columns: [\"CI\", \"_measurement\", \"_start\", \"_stop\"])\n  |> last()\n",
            "refId": "A"
          }
        ],
        "title": "RSRP",
        "type": "stat"
      }
    },
    "eb86aefa-ef64-4adf-99b1-201aae16963e": {
      "name": "RSRQ quick",
      "uid": "eb86aefa-ef64-4adf-99b1-201aae16963e",
      "kind": 1,
      "model": {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 1,
            "displayName": "${__field.labels.device}",
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "red",
                  "value": null
                },
                {
                  "color": "orange",
                  "value": -20
                },
                {
                  "color": "blue",
                  "value": -15
                },
                {
                  "color": "green",
                  "value": -10
                }
              ]
            },
            "unit": "dB"
          },
          "overrides": []
        },
        "options": {
          "colorMode": "background_solid",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "text": {},
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.0.0-preview",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "Ckrwhbn4k"
            },
            "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${api_call}\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"SSRSRQ\" or r[\"_field\"] == \"RSRQ\")\n  |> filter(fn: (r) => r[\"device\"] =~ /${device:regex}/)\n  |> drop(columns: [\"CI\", \"_measurement\", \"_start\", \"_stop\"])\n  |> last()\n",
            "refId": "A"
          }
        ],
        "title": "RSRQ",
        "type": "stat"
      }
    },
    "d58e319c-b004-417e-94e3-49f0c3ca235b": {
      "name": "SINR quick",
      "uid": "d58e319c-b004-417e-94e3-49f0c3ca235b",
      "kind": 1,
      "model": {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 1,
            "displayName": "${__field.labels.device}",
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "red",
                  "value": null
                },
                {
                  "color": "orange",
                  "value": 0
                },
                {
                  "color": "blue",
                  "value": 13
                },
                {
                  "color": "green",
                  "value": 20
                }
              ]
            },
            "unit": "dBm"
          },
          "overrides": []
        },
        "options": {
          "colorMode": "background_solid",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "text": {},
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.0.0-preview",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "Ckrwhbn4k"
            },
            "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${api_call}\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"_field\"] == \"SSSINR\" or r[\"_field\"] == \"RSSI\")\n  |> filter(fn: (r) => r[\"device\"] =~ /${device:regex}/)\n  |> drop(columns: [\"CI\", \"_measurement\", \"_start\", \"_stop\"])\n  |> last()\n",
            "refId": "A"
          }
        ],
        "title": "RSSI/SINR",
        "type": "stat"
      }
    },
    "b61e9dc5-06c8-4559-a70b-271fbec8dd00": {
      "name": "PCI quick",
      "uid": "b61e9dc5-06c8-4559-a70b-271fbec8dd00",
      "kind": 1,
      "model": {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "continuous-BlPu"
            },
            "decimals": 0,
            "displayName": "${__field.labels.device}",
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "none"
          },
          "overrides": []
        },
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "text": {},
          "textMode": "auto"
        },
        "pluginVersion": "10.1.2",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "Ckrwhbn4k"
            },
            "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${api_call}\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"_measurement\"] == \"CellInformation\" and (r[\"_field\"] == \"MCC\" and r._value == 999 or r[\"_field\"] == \"PCI\"))\n  |> filter(fn: (r) => r[\"device\"] =~ /${device:regex}/)\n  |> drop(columns: [\"CI\", \"_measurement\", \"_start\", \"_stop\"])\n  |> last()\n",
            "refId": "A"
          }
        ],
        "title": "PCI",
        "type": "stat"
      }
    },
    "ef7dcafd-c2ce-463b-b904-9aadfdaabdcb": {
      "name": "Battery quick",
      "uid": "ef7dcafd-c2ce-463b-b904-9aadfdaabdcb",
      "kind": 1,
      "model": {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "continuous-RdYlGr"
            },
            "decimals": 0,
            "displayName": "${__field.labels.device}",
            "mappings": [],
            "max": 100,
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "red",
                  "value": null
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": []
        },
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "text": {},
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.0.0-preview",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "Ckrwhbn4k"
            },
            "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"BatteryInformation\")\n  |> filter(fn: (r) => r[\"_field\"] == \"Percent\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"device\"] =~ /${device:regex}/)\n  |> drop(columns: [\"CI\", \"_measurement\", \"_start\", \"_stop\"])\n",
            "refId": "A"
          }
        ],
        "title": "Battery status UEs",
        "type": "stat"
      }
    }
  },
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "11.0.0-preview"
    },
    {
      "type": "panel",
      "id": "grafana-clock-panel",
      "name": "Clock",
      "version": "2.1.3"
    },
    {
      "type": "datasource",
      "id": "influxdb",
      "name": "InfluxDB",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "id": null,
  "links": [],
  "liveNow": true,
  "panels": [
    {
      "gridPos": {
        "h": 23,
        "w": 21,
        "x": 0,
        "y": 0
      },
      "id": 62,
      "libraryPanel": {
        "uid": "c9c52a7f-fa31-446d-8b9f-6790a081a0c3",
        "name": "Position"
      }
    },
    {
      "gridPos": {
        "h": 9,
        "w": 3,
        "x": 21,
        "y": 0
      },
      "id": 64,
      "libraryPanel": {
        "uid": "f88544f3-76de-44a9-a6e7-237a42ba136d",
        "name": "Speed"
      }
    },
    {
      "gridPos": {
        "h": 9,
        "w": 3,
        "x": 21,
        "y": 9
      },
      "id": 6,
      "libraryPanel": {
        "uid": "f29c140e-6975-41c2-a906-7ee5f40e8156",
        "name": "Altitude"
      }
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "gridPos": {
        "h": 5,
        "w": 3,
        "x": 21,
        "y": 18
      },
      "id": 16,
      "options": {
        "bgColor": "",
        "clockType": "24 hour",
        "countdownSettings": {
          "endCountdownTime": "2022-09-22T20:56:59+02:00",
          "endText": "00:00:00"
        },
        "countupSettings": {
          "beginCountupTime": "2022-09-22T20:56:59+02:00",
          "beginText": "00:00:00"
        },
        "dateSettings": {
          "dateFormat": "YYYY-MM-DD",
          "fontSize": "20px",
          "fontWeight": "normal",
          "locale": "",
          "showDate": false
        },
        "fontMono": true,
        "mode": "time",
        "refresh": "sec",
        "timeSettings": {
          "fontSize": "40px",
          "fontWeight": "bold"
        },
        "timezone": "",
        "timezoneSettings": {
          "fontSize": "12px",
          "fontWeight": "normal",
          "showTimezone": true,
          "zoneFormat": "offsetAbbv"
        }
      },
      "pluginVersion": "2.1.3",
      "type": "grafana-clock-panel"
    },
    {
      "gridPos": {
        "h": 4,
        "w": 8,
        "x": 0,
        "y": 23
      },
      "id": 65,
      "libraryPanel": {
        "uid": "c92ace65-7b23-4c71-9dee-431610ad969d",
        "name": "RSRP quick"
      }
    },
    {
      "gridPos": {
        "h": 4,
        "w": 8,
        "x": 8,
        "y": 23
      },
      "id": 71,
      "libraryPanel": {
        "uid": "eb86aefa-ef64-4adf-99b1-201aae16963e",
        "name": "RSRQ quick"
      }
    },
    {
      "gridPos": {
        "h": 4,
        "w": 8,
        "x": 16,
        "y": 23
      },
      "id": 67,
      "libraryPanel": {
        "uid": "d58e319c-b004-417e-94e3-49f0c3ca235b",
        "name": "SINR quick"
      }
    },
    {
      "gridPos": {
        "h": 4,
        "w": 8,
        "x": 0,
        "y": 27
      },
      "id": 69,
      "libraryPanel": {
        "uid": "b61e9dc5-06c8-4559-a70b-271fbec8dd00",
        "name": "PCI quick"
      }
    },
    {
      "gridPos": {
        "h": 4,
        "w": 8,
        "x": 8,
        "y": 27
      },
      "id": 72,
      "libraryPanel": {
        "uid": "ef7dcafd-c2ce-463b-b904-9aadfdaabdcb",
        "name": "Battery quick"
      }
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 0,
          "displayName": "${__field.labels.device}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "blue",
                "value": 20
              },
              {
                "color": "orange",
                "value": 40
              },
              {
                "color": "red",
                "value": 60
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 8,
        "x": 16,
        "y": 27
      },
      "id": 73,
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "text": {},
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0-preview",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Ping\")\n  |> filter(fn: (r) => r[\"_field\"] == \"rtt\")\n  |> filter(fn: (r) => r[\"device\"] =~ /${device:regex}/)\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> drop(columns: [\"CI\", \"_measurement\", \"_start\", \"_stop\"])\n  |> last()",
          "refId": "A"
        }
      ],
      "title": "RTT",
      "type": "stat"
    }
  ],
  "refresh": false,
  "schemaVersion": 39,
  "tags": [
    "FINAL"
  ],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "customTagValues = (bucket, tag, predicate=(r) => true, start=v.timeRangeStart, stop=v.timeRangeStop) =>\n  from(bucket: bucket)\n    |> range(start: start, stop: stop)\n    |> filter(fn: predicate)\n    |> keep(columns: [tag])\n    |> group()\n    |> distinct(column: tag)\n\ncustomTagValues(bucket: \"${bucket}\", tag: \"measurement_name\")",
        "hide": 0,
        "includeAll": false,
        "label": "Measurement",
        "multi": false,
        "name": "data_source",
        "options": [],
        "query": "customTagValues = (bucket, tag, predicate=(r) => true, start=v.timeRangeStart, stop=v.timeRangeStop) =>\n  from(bucket: bucket)\n    |> range(start: start, stop: stop)\n    |> filter(fn: predicate)\n    |> keep(columns: [tag])\n    |> group()\n    |> distinct(column: tag)\n\ncustomTagValues(bucket: \"${bucket}\", tag: \"measurement_name\")",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "buckets()",
        "hide": 0,
        "includeAll": false,
        "label": "Bucket",
        "multi": false,
        "name": "bucket",
        "options": [],
        "query": "buckets()",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "customTagValues = (bucket, tag, predicate=(r) => true, start=v.timeRangeStart, stop=v.timeRangeStop) =>\n  from(bucket: bucket)\n    |> range(start: start, stop: stop)\n    |> filter(fn: predicate)\n    |> keep(columns: [tag])\n    |> group()\n    |> distinct(column: tag)\n\ncustomTagValues(bucket: \"${bucket}\", tag: \"device\")",
        "description": "Choose Device",
        "hide": 0,
        "includeAll": false,
        "label": "Device",
        "multi": true,
        "name": "device",
        "options": [],
        "query": "customTagValues = (bucket, tag, predicate=(r) => true, start=v.timeRangeStart, stop=v.timeRangeStop) =>\n  from(bucket: bucket)\n    |> range(start: start, stop: stop)\n    |> filter(fn: predicate)\n    |> keep(columns: [tag])\n    |> group()\n    |> distinct(column: tag)\n\ncustomTagValues(bucket: \"${bucket}\", tag: \"device\")",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "auto": true,
        "auto_count": 500,
        "auto_min": "1s",
        "current": {
          "selected": false,
          "text": "auto",
          "value": "$__auto_interval_Interval"
        },
        "hide": 0,
        "name": "Interval",
        "options": [
          {
            "selected": true,
            "text": "auto",
            "value": "$__auto_interval_Interval"
          },
          {
            "selected": false,
            "text": "200ms",
            "value": "200ms"
          },
          {
            "selected": false,
            "text": "1s",
            "value": "1s"
          },
          {
            "selected": false,
            "text": "2s",
            "value": "2s"
          },
          {
            "selected": false,
            "text": "5s",
            "value": "5s"
          },
          {
            "selected": false,
            "text": "10s",
            "value": "10s"
          },
          {
            "selected": false,
            "text": "1m",
            "value": "1m"
          },
          {
            "selected": false,
            "text": "10m",
            "value": "10m"
          }
        ],
        "query": "200ms,1s,2s,5s,10s,1m,10m",
        "queryValue": "",
        "refresh": 2,
        "skipUrlSync": false,
        "type": "interval"
      },
      {
        "current": {
          "selected": false,
          "text": "CellInformation",
          "value": "CellInformation"
        },
        "description": "",
        "hide": 0,
        "includeAll": false,
        "label": "API",
        "multi": false,
        "name": "api_call",
        "options": [
          {
            "selected": true,
            "text": "CellInformation",
            "value": "CellInformation"
          },
          {
            "selected": false,
            "text": "SignalStrength",
            "value": "SignalStrength"
          }
        ],
        "query": "CellInformation, SignalStrength",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      }
    ]
  },
  "time": {
    "from": "now-5m",
    "to": "now"
  },
  "timeRangeUpdatedDuringEditOrView": false,
  "timepicker": {
    "hidden": false,
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ],
    "type": "timepicker"
  },
  "timezone": "browser",
  "title": "Overview",
  "uid": "d738fce4-722f-47d4-8163-76b135643000",
  "version": 2,
  "weekStart": "monday"
}