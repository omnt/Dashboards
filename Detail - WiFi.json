{
  "__inputs": [
    {
      "name": "DS_INFLUXDB",
      "label": "InfluxDB",
      "description": "",
      "type": "datasource",
      "pluginId": "influxdb",
      "pluginName": "InfluxDB"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "panel",
      "id": "geomap",
      "name": "Geomap",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "11.0.1"
    },
    {
      "type": "panel",
      "id": "histogram",
      "name": "Histogram",
      "version": ""
    },
    {
      "type": "datasource",
      "id": "influxdb",
      "name": "InfluxDB",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "sebastiangunreben-cdf-panel",
      "name": "CDF - Cumulative Distribution Function",
      "version": "0.2.7"
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    },
    {
      "type": "panel",
      "id": "xychart",
      "name": "XY Chart",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 2,
  "id": null,
  "links": [],
  "liveNow": true,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 44,
      "panels": [],
      "title": "Signal Quality",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "text",
            "mode": "fixed"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "SSRSRP"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "thresholds"
                }
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "red",
                      "value": null
                    },
                    {
                      "color": "#EAB839",
                      "value": -110
                    },
                    {
                      "color": "orange",
                      "value": -100
                    },
                    {
                      "color": "blue",
                      "value": -90
                    },
                    {
                      "color": "green",
                      "value": -80
                    }
                  ]
                }
              },
              {
                "id": "decimals",
                "value": 2
              },
              {
                "id": "noValue"
              },
              {
                "id": "displayName",
                "value": "RSRP"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "PCI"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "PCI"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "latitude"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Latitude"
              },
              {
                "id": "decimals",
                "value": 8
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "longitude"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Longitude"
              },
              {
                "id": "decimals",
                "value": 8
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "altitude"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Altitude"
              },
              {
                "id": "decimals",
                "value": 8
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "_time"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Time"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 24,
      "maxPerRow": 6,
      "options": {
        "basemap": {
          "config": {
            "server": "world-imagery"
          },
          "name": "Layer 0",
          "opacity": 0.4,
          "tooltip": false,
          "type": "esri-xyz"
        },
        "controls": {
          "mouseWheelZoom": false,
          "showAttribution": true,
          "showDebug": false,
          "showMeasure": true,
          "showScale": true,
          "showZoom": true
        },
        "layers": [
          {
            "config": {
              "showLegend": true,
              "style": {
                "color": {
                  "field": "SSRSRP",
                  "fixed": "dark-green"
                },
                "opacity": 0.7,
                "rotation": {
                  "fixed": 0,
                  "max": 360,
                  "min": -360,
                  "mode": "mod"
                },
                "size": {
                  "fixed": 5,
                  "max": 15,
                  "min": 2
                },
                "symbol": {
                  "fixed": "img/icons/marker/circle.svg",
                  "mode": "fixed"
                },
                "text": {
                  "field": "",
                  "fixed": "",
                  "mode": "field"
                },
                "textConfig": {
                  "fontSize": 12,
                  "offsetX": 0,
                  "offsetY": 0,
                  "textAlign": "center",
                  "textBaseline": "middle"
                }
              }
            },
            "filterData": {
              "id": "byRefId",
              "options": "A"
            },
            "name": "RSRP",
            "opacity": 1,
            "tooltip": true,
            "type": "markers"
          },
          {
            "config": {
              "arrow": 0,
              "style": {
                "color": {
                  "field": "SSRSRP",
                  "fixed": "dark-green"
                },
                "lineWidth": 2,
                "opacity": 1,
                "rotation": {
                  "fixed": 0,
                  "max": 360,
                  "min": -360,
                  "mode": "mod"
                },
                "size": {
                  "fixed": 5,
                  "max": 15,
                  "min": 2
                },
                "symbol": {
                  "fixed": "img/icons/marker/circle.svg",
                  "mode": "fixed"
                },
                "textConfig": {
                  "fontSize": 12,
                  "offsetX": 0,
                  "offsetY": 0,
                  "textAlign": "center",
                  "textBaseline": "middle"
                }
              }
            },
            "location": {
              "mode": "auto"
            },
            "name": "Layer 3",
            "opacity": 0.5,
            "tooltip": true,
            "type": "route"
          }
        ],
        "tooltip": {
          "mode": "details"
        },
        "view": {
          "allLayers": false,
          "id": "fit",
          "lastOnly": false,
          "lat": 51.528843,
          "layer": "RSRP",
          "lon": 7.204273,
          "padding": 60,
          "shared": true,
          "zoom": 18
        }
      },
      "pluginVersion": "11.0.1",
      "repeat": "device",
      "repeatDirection": "h",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "location = from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Location\")\n  |> filter(fn: (r) => r[\"_field\"] == \"altitude\" or r[\"_field\"] == \"latitude\" or r[\"_field\"] == \"longitude\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r._value != 0.0, onEmpty: \"keep\")\n  |> filter(fn: (r) => r[\"device\"] =~ /^${device:regex}/)\n  |> drop(columns: [\"CI\", \"_measurement\", \"_start\", \"_stop\", \"imsi\", \"imei\"])\n  |> filter(fn: (r) => not exists r.latitude)\n  |> aggregateWindow(every: ${Interval}, fn: last, createEmpty: false)\n      \n\nsignal = from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WifiInformation\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"device\"] =~ /^${device:regex}/)\n  |> filter(fn: (r) => r[\"_field\"] == \"RSSI\")\n  |> filter(fn: (r) => r._value > -200)\n  |> filter(fn: (r) => r._value < -10)\n  |> drop(columns: [\"CI\", \"_measurement\", \"_start\", \"_stop\", \"imsi\", \"imei\"])\n  |> aggregateWindow(every: ${Interval}, fn: mean, createEmpty: false)\n    \nbssid = from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"CellInformation\")\n  |> filter(fn: (r) => r[\"_field\"] == \"BSSID\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"device\"] =~ /^${device:regex}/)\n  |> drop(columns: [\"CI\", \"_measurement\", \"_start\", \"_stop\", \"imsi\", \"imei\"])\n  |> aggregateWindow(every: ${Interval}, fn: last, createEmpty: false)\n    \n\n\nunion(tables: [location, signal, bssid])\n    |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> sort(columns: [\"_time\"])\n    |> filter(fn: (r) => exists r.latitude)\n    |> filter(fn: (r) => exists r.RSSI)\n\n",
          "refId": "A"
        }
      ],
      "title": "RSRP $device",
      "type": "geomap"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "purple",
            "mode": "palette-classic",
            "seriesBy": "last"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisGridShow": true,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 4,
            "pointSize": 11,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": 5000,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "area"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "orange",
                "value": -100
              },
              {
                "color": "blue",
                "value": -90
              },
              {
                "color": "green",
                "value": -80
              }
            ]
          },
          "unit": "dBm"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 14,
        "w": 24,
        "x": 0,
        "y": 205
      },
      "id": 8,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull",
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "maxHeight": 600,
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"WifiInformation\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"device\"] =~ /^${device:regex}/)\n  |> filter(fn: (r) => r[\"_field\"] == \"RSSI\")\n  |> filter(fn: (r) => r._value > -200)\n  |> filter(fn: (r) => r._value < -10)\n  |> drop(columns: [\"CI\", \"_measurement\", \"_start\", \"_stop\", \"imsi\", \"imei\"])\n  |> aggregateWindow(every: ${Interval}, fn: mean, createEmpty: true)\n  |> group(columns: [\"device\"])\n  |> rename(columns: {_value: \"RSSI\"})\n  ",
          "refId": "A"
        }
      ],
      "title": "RSSI (dBm)",
      "type": "timeseries"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 219
      },
      "id": 45,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red"
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "bits_per_second"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Bits per Second"
                  },
                  {
                    "id": "unit",
                    "value": "bps"
                  },
                  {
                    "id": "color",
                    "value": {
                      "mode": "continuous-RdYlGr"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "PCI"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "PCI"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "altitude {_start=\"2024-06-13 07:42:03.556 +0000 UTC\", _stop=\"2024-06-13 08:16:02.152 +0000 UTC\", device=\"cm4pi1\", measurement_name=\"omnt\"}"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Altitude"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "latitude {_start=\"2024-06-13 07:42:03.556 +0000 UTC\", _stop=\"2024-06-13 08:16:02.152 +0000 UTC\", device=\"cm4pi1\", measurement_name=\"omnt\"}"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Latitude"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "longitude {_start=\"2024-06-13 07:42:03.556 +0000 UTC\", _stop=\"2024-06-13 08:16:02.152 +0000 UTC\", device=\"cm4pi1\", measurement_name=\"omnt\"}"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Longitude"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 12,
            "w": 24,
            "x": 0,
            "y": 28
          },
          "id": 42,
          "maxPerRow": 6,
          "options": {
            "basemap": {
              "config": {
                "server": "world-imagery"
              },
              "name": "Layer 0",
              "opacity": 0.5,
              "tooltip": true,
              "type": "esri-xyz"
            },
            "controls": {
              "mouseWheelZoom": false,
              "showAttribution": true,
              "showDebug": false,
              "showMeasure": false,
              "showScale": true,
              "showZoom": true
            },
            "layers": [
              {
                "config": {
                  "showLegend": true,
                  "style": {
                    "color": {
                      "field": "bits_per_second",
                      "fixed": "dark-green"
                    },
                    "opacity": 0.4,
                    "rotation": {
                      "fixed": 0,
                      "max": 360,
                      "min": -360,
                      "mode": "mod"
                    },
                    "size": {
                      "fixed": 3,
                      "max": 15,
                      "min": 2
                    },
                    "symbol": {
                      "fixed": "img/icons/marker/circle.svg",
                      "mode": "fixed"
                    },
                    "symbolAlign": {
                      "horizontal": "center",
                      "vertical": "center"
                    },
                    "textConfig": {
                      "fontSize": 12,
                      "offsetX": 0,
                      "offsetY": 0,
                      "textAlign": "center",
                      "textBaseline": "middle"
                    }
                  }
                },
                "location": {
                  "mode": "auto"
                },
                "name": "Throughput",
                "tooltip": true,
                "type": "markers"
              },
              {
                "config": {
                  "arrow": 0,
                  "style": {
                    "color": {
                      "field": "bits_per_second",
                      "fixed": "dark-green"
                    },
                    "lineWidth": 2,
                    "opacity": 1,
                    "rotation": {
                      "fixed": 0,
                      "max": 360,
                      "min": -360,
                      "mode": "mod"
                    },
                    "size": {
                      "fixed": 1,
                      "max": 15,
                      "min": 2
                    },
                    "symbol": {
                      "fixed": "img/icons/marker/circle.svg",
                      "mode": "fixed"
                    },
                    "symbolAlign": {
                      "horizontal": "center",
                      "vertical": "center"
                    },
                    "text": {
                      "fixed": "",
                      "mode": "field"
                    },
                    "textConfig": {
                      "fontSize": 12,
                      "offsetX": 0,
                      "offsetY": 0,
                      "textAlign": "center",
                      "textBaseline": "middle"
                    }
                  }
                },
                "filterData": {
                  "id": "byRefId",
                  "options": "A"
                },
                "location": {
                  "mode": "auto"
                },
                "name": "Layer 4",
                "opacity": 0.4,
                "tooltip": true,
                "type": "route"
              }
            ],
            "tooltip": {
              "mode": "details"
            },
            "view": {
              "allLayers": false,
              "id": "fit",
              "lastOnly": false,
              "lat": 51.528433,
              "layer": "iPerf3",
              "lon": 7.202937,
              "shared": true,
              "zoom": 18
            }
          },
          "pluginVersion": "10.4.5",
          "repeat": "device",
          "repeatDirection": "h",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "query": "location = from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Location\")\n  |> filter(fn: (r) => r[\"_field\"] == \"altitude\" or r[\"_field\"] == \"latitude\" or r[\"_field\"] == \"longitude\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"device\"] =~ /^${device:regex}/)\n  |> drop(columns: [\"CI\", \"_measurement\", \"_start\", \"_stop\", \"imsi\", \"imei\"])\n  |> filter(fn: (r) => not exists r.latitude)\n  |> filter(fn: (r) => r._value != 0.0, onEmpty: \"keep\")\n  |> aggregateWindow(every: ${Interval}, fn: last, createEmpty: false)      \n      \niperf3 = from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Iperf3\")\n  |> filter(fn: (r) => r[\"_field\"] == \"bits_per_second\")\n  |> filter(fn: (r) => r[\"device\"] =~ /^${device:regex}/)\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"sender\"] == \"false\")\n  |> keep(columns: [\"_value\", \"_time\", \"_field\", \"device\", \"measurement_name\"])\n  |> aggregateWindow(every: ${Interval}, fn: mean, createEmpty: false)\n\n\nPCI = from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"CellInformation\")\n  |> filter(fn: (r) => r[\"_field\"] == \"PCI\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"device\"] =~ /^${device:regex}/)\n  |> drop(columns: [\"CI\", \"_measurement\", \"_start\", \"_stop\", \"imsi\", \"imei\"])\n  |> aggregateWindow(every: ${Interval}, fn: mean, createEmpty: false)\n    \n\n\nunion(tables: [location, iperf3, PCI])\n    |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> sort(columns: [\"_time\"])\n    |> filter(fn: (r) => r.bits_per_second != 0.0, onEmpty: \"keep\")\n    |> filter(fn: (r) => r.latitude != 0.0, onEmpty: \"keep\")\n",
              "refId": "A"
            }
          ],
          "title": "Downlink - iPerf3 - $device",
          "transformations": [
            {
              "id": "merge",
              "options": {}
            }
          ],
          "type": "geomap"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "orange",
                "mode": "palette-classic",
                "seriesBy": "last"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": 2000,
                "lineInterpolation": "smooth",
                "lineStyle": {
                  "fill": "solid"
                },
                "lineWidth": 4,
                "pointSize": 4,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "${__field.labels.device} - ${__field.labels.protocol} - ${__field.labels.connectingToHost}",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              },
              "unit": "bps"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 12,
            "w": 24,
            "x": 0,
            "y": 40
          },
          "id": 41,
          "options": {
            "legend": {
              "calcs": [
                "max",
                "min",
                "mean"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "maxHeight": 600,
              "mode": "single",
              "sort": "desc"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "hide": false,
              "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Iperf3\")\n  |> filter(fn: (r) => r[\"_field\"] == \"bits_per_second\")\n  |> filter(fn: (r) => r[\"device\"] =~ /^${device:regex}/)\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"sender\"] == \"false\")\n  |> keep(columns: [\"device\",\"connectingToHost\", \"_time\", \"_value\", \"streamIdx\", \"protocol\"]) \n  |> group(columns: [\"device\",\"connectingToHost\", \"_time\", \"protocol\"])\n  |> sum(column: \"_value\")\n  |> group(columns: [\"device\",\"connectingToHost\", \"protocol\"])\n  |> filter(fn: (r) => r._value < 1000000000)\n",
              "refId": "Download"
            }
          ],
          "title": "Downlink - iPerf3",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red"
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "bits_per_second"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Bits per Second"
                  },
                  {
                    "id": "unit",
                    "value": "bps"
                  },
                  {
                    "id": "color",
                    "value": {
                      "mode": "continuous-RdYlGr"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 12,
            "w": 24,
            "x": 0,
            "y": 52
          },
          "id": 51,
          "maxPerRow": 6,
          "options": {
            "basemap": {
              "config": {
                "server": "world-imagery"
              },
              "name": "Layer 0",
              "opacity": 0.5,
              "tooltip": true,
              "type": "esri-xyz"
            },
            "controls": {
              "mouseWheelZoom": false,
              "showAttribution": true,
              "showDebug": false,
              "showMeasure": false,
              "showScale": true,
              "showZoom": true
            },
            "layers": [
              {
                "config": {
                  "arrow": 0,
                  "style": {
                    "color": {
                      "field": "bits_per_second",
                      "fixed": "text"
                    },
                    "lineWidth": 2,
                    "opacity": 1,
                    "rotation": {
                      "fixed": 0,
                      "max": 360,
                      "min": -360,
                      "mode": "mod"
                    },
                    "size": {
                      "fixed": 1,
                      "max": 15,
                      "min": 2
                    },
                    "symbol": {
                      "fixed": "img/icons/marker/circle.svg",
                      "mode": "fixed"
                    },
                    "textConfig": {
                      "fontSize": 12,
                      "offsetX": 0,
                      "offsetY": 0,
                      "textAlign": "center",
                      "textBaseline": "middle"
                    }
                  }
                },
                "location": {
                  "latitude": "latitude",
                  "longitude": "longitude",
                  "mode": "coords"
                },
                "name": "Route",
                "opacity": 1,
                "tooltip": true,
                "type": "route"
              },
              {
                "config": {
                  "showLegend": true,
                  "style": {
                    "color": {
                      "field": "bits_per_second",
                      "fixed": "red"
                    },
                    "opacity": 1,
                    "rotation": {
                      "fixed": 0,
                      "max": 360,
                      "min": -360,
                      "mode": "mod"
                    },
                    "size": {
                      "fixed": 4,
                      "max": 15,
                      "min": 2
                    },
                    "symbol": {
                      "fixed": "img/icons/marker/circle.svg",
                      "mode": "fixed"
                    },
                    "textConfig": {
                      "fontSize": 12,
                      "offsetX": 0,
                      "offsetY": 0,
                      "textAlign": "center",
                      "textBaseline": "middle"
                    }
                  }
                },
                "name": "iPerf3",
                "opacity": 0.6,
                "tooltip": true,
                "type": "markers"
              }
            ],
            "tooltip": {
              "mode": "details"
            },
            "view": {
              "allLayers": false,
              "id": "fit",
              "lastOnly": false,
              "lat": 51.528433,
              "layer": "iPerf3",
              "lon": 7.202937,
              "shared": true,
              "zoom": 18
            }
          },
          "pluginVersion": "10.4.5",
          "repeat": "device",
          "repeatDirection": "h",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "query": "location = from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Location\")\n  |> filter(fn: (r) => r[\"_field\"] == \"altitude\" or r[\"_field\"] == \"latitude\" or r[\"_field\"] == \"longitude\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"device\"] =~ /^${device:regex}/)\n  |> drop(columns: [\"CI\", \"_measurement\", \"_start\", \"_stop\", \"imsi\", \"imei\"])\n  |> filter(fn: (r) => not exists r.latitude)\n  |> filter(fn: (r) => r._value != 0.0, onEmpty: \"keep\")\n  |> aggregateWindow(every: ${Interval}, fn: last, createEmpty: false)      \n      \niperf3 = from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Iperf3\")\n  |> filter(fn: (r) => r[\"_field\"] == \"bits_per_second\")\n  |> filter(fn: (r) => r[\"device\"] =~ /^${device:regex}/)\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"sender\"] == \"true\")\n  |> keep(columns: [\"_value\", \"_time\", \"_field\", \"device\", \"measurement_name\"])\n  |> aggregateWindow(every: ${Interval}, fn: mean, createEmpty: false)\n\n\nPCI = from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"CellInformation\")\n  |> filter(fn: (r) => r[\"_field\"] == \"PCI\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"device\"] =~ /^${device:regex}/)\n  |> drop(columns: [\"CI\", \"_measurement\", \"_start\", \"_stop\", \"imsi\", \"imei\"])\n  |> aggregateWindow(every: ${Interval}, fn: mean, createEmpty: false)\n    \n\n\nunion(tables: [location, iperf3, PCI])\n    |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> sort(columns: [\"_time\"])\n    |> filter(fn: (r) => r.bits_per_second != 0.0, onEmpty: \"keep\")\n    |> filter(fn: (r) => r.latitude != 0.0, onEmpty: \"keep\")\n",
              "refId": "A"
            }
          ],
          "title": "Uplink - iPerf3 $device",
          "transformations": [
            {
              "id": "merge",
              "options": {}
            }
          ],
          "type": "geomap"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "orange",
                "mode": "palette-classic",
                "seriesBy": "last"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": 2000,
                "lineInterpolation": "smooth",
                "lineStyle": {
                  "fill": "solid"
                },
                "lineWidth": 4,
                "pointSize": 4,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "${__field.labels.device} - ${__field.labels.protocol} - ${__field.labels.connectingToHost}",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              },
              "unit": "bps"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 14,
            "w": 24,
            "x": 0,
            "y": 64
          },
          "id": 52,
          "options": {
            "legend": {
              "calcs": [
                "max",
                "min",
                "mean"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true,
              "sortBy": "Mean",
              "sortDesc": true
            },
            "tooltip": {
              "maxHeight": 600,
              "mode": "single",
              "sort": "desc"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "hide": false,
              "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Iperf3\")\n  |> filter(fn: (r) => r[\"_field\"] == \"bits_per_second\")\n  |> filter(fn: (r) => r[\"device\"] =~ /^${device:regex}/)\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"sender\"] == \"true\" or r[\"sender\"] == \"True\")\n  |> keep(columns: [\"device\",\"connectingToHost\", \"_time\", \"_value\", \"streamIdx\", \"protocol\"]) \n  |> group(columns: [\"device\",\"connectingToHost\", \"_time\", \"protocol\"])\n  |> sum(column: \"_value\")\n  |> group(columns: [\"device\",\"connectingToHost\", \"protocol\"])",
              "refId": "Download"
            }
          ],
          "title": "Uplink - iPerf3",
          "type": "timeseries"
        }
      ],
      "title": "Network Quality",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 220
      },
      "id": 71,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "continuous-GrYlRd"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red"
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "rtt"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "ms"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 12,
            "w": 24,
            "x": 0,
            "y": 29
          },
          "id": 39,
          "maxPerRow": 6,
          "options": {
            "basemap": {
              "config": {
                "server": "world-imagery"
              },
              "name": "Layer 0",
              "opacity": 0.5,
              "type": "esri-xyz"
            },
            "controls": {
              "mouseWheelZoom": false,
              "showAttribution": true,
              "showDebug": false,
              "showMeasure": true,
              "showScale": true,
              "showZoom": true
            },
            "layers": [
              {
                "config": {
                  "arrow": 0,
                  "style": {
                    "color": {
                      "field": "rtt",
                      "fixed": "text"
                    },
                    "lineWidth": 2,
                    "opacity": 1,
                    "rotation": {
                      "fixed": 0,
                      "max": 360,
                      "min": -360,
                      "mode": "mod"
                    },
                    "size": {
                      "fixed": 1,
                      "max": 15,
                      "min": 2
                    },
                    "symbol": {
                      "field": "",
                      "fixed": "",
                      "mode": "fixed"
                    },
                    "text": {
                      "fixed": "",
                      "mode": "field"
                    },
                    "textConfig": {
                      "fontSize": 40,
                      "offsetX": 0,
                      "offsetY": 0,
                      "textAlign": "center",
                      "textBaseline": "middle"
                    }
                  }
                },
                "location": {
                  "latitude": "latitude",
                  "longitude": "longitude",
                  "mode": "coords"
                },
                "name": "Route",
                "opacity": 1,
                "tooltip": true,
                "type": "route"
              },
              {
                "config": {
                  "showLegend": true,
                  "style": {
                    "color": {
                      "field": "rtt",
                      "fixed": "red"
                    },
                    "opacity": 1,
                    "rotation": {
                      "fixed": 0,
                      "max": 360,
                      "min": -360,
                      "mode": "mod"
                    },
                    "size": {
                      "fixed": 4,
                      "max": 15,
                      "min": 2
                    },
                    "symbol": {
                      "fixed": "img/icons/marker/circle.svg",
                      "mode": "fixed"
                    },
                    "textConfig": {
                      "fontSize": 12,
                      "offsetX": 0,
                      "offsetY": 0,
                      "textAlign": "center",
                      "textBaseline": "middle"
                    }
                  }
                },
                "name": "RTT",
                "opacity": 0.6,
                "tooltip": true,
                "type": "markers"
              }
            ],
            "tooltip": {
              "mode": "details"
            },
            "view": {
              "allLayers": false,
              "id": "fit",
              "lastOnly": false,
              "lat": 51.528433,
              "layer": "RTT",
              "lon": 7.202937,
              "shared": true,
              "zoom": 18
            }
          },
          "pluginVersion": "10.4.5",
          "repeat": "device",
          "repeatDirection": "h",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "hide": false,
              "query": "location = from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Location\")\n  |> filter(fn: (r) => r[\"_field\"] == \"altitude\" or r[\"_field\"] == \"latitude\" or r[\"_field\"] == \"longitude\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"device\"] =~ /^${device:regex}/)\n  |> filter(fn: (r) => r._value != 0.0, onEmpty: \"keep\")\n  |> aggregateWindow(every: ${Interval}, fn: last, createEmpty: false)\n  |> keep(columns: [\"device\", \"_time\", \"_field\", \"_value\", \"measurement_name\"])\n\n      \nping = from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Ping\")\n  |> filter(fn: (r) => r[\"_field\"] == \"rtt\")\n  |> filter(fn: (r) => r._value < 1000)\n  |> filter(fn: (r) => r[\"device\"] =~ /^${device:regex}/)\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> aggregateWindow(every: ${Interval}, fn: mean, createEmpty: false)\n  |> keep(columns: [\"device\", \"_time\", \"_field\", \"_value\", \"measurement_name\"])\n\nPCI = from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"CellInformation\")\n  |> filter(fn: (r) => r[\"_field\"] == \"PCI\")\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"device\"] =~ /^${device:regex}/)\n  |> aggregateWindow(every: ${Interval}, fn: mean, createEmpty: false)\n  |> keep(columns: [\"device\", \"_time\", \"_field\", \"_value\", \"measurement_name\"])\n  \n\n\nunion(tables: [location, ping, PCI])\n    |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> sort(columns: [\"_time\"])\n    |> keep(columns: [\"device\", \"_time\", \"altitude\", \"rtt\", \"PCI\", \"longitude\", \"latitude\"])\n    |> filter(fn: (r) => r.rtt != 0.0, onEmpty: \"keep\")\n    |> filter(fn: (r) => r.PCI != 0.0, onEmpty: \"keep\")\n    |> filter(fn: (r) => r.longitude != 0.0, onEmpty: \"keep\")",
              "refId": "A"
            }
          ],
          "title": "RTT $device",
          "transformations": [
            {
              "id": "merge",
              "options": {}
            }
          ],
          "type": "geomap"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "text",
                "mode": "palette-classic",
                "seriesBy": "max"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "points",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": 2000,
                "lineInterpolation": "smooth",
                "lineWidth": 4,
                "pointSize": 7,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": 5000,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 2,
              "displayName": "${__series.name} - ${__field.labels.toHost} - ${__field.labels.device}",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red"
                  }
                ]
              },
              "unit": "ms"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 12,
            "w": 12,
            "x": 0,
            "y": 41
          },
          "id": 40,
          "options": {
            "legend": {
              "calcs": [
                "lastNotNull",
                "min",
                "max",
                "mean"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.0",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "hide": false,
              "query": "iperf3 = from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Iperf3\")\n  |> filter(fn: (r) => r[\"_field\"] == \"rtt\")\n  |> filter(fn: (r) => r[\"device\"] =~ /^${device:regex}/)\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"sender\"] == \"true\")\n  |> drop(columns: [\"socket\", \"imsi\", \"imei\"])\n  |> rename(columns: {connectingToHost: \"toHost\"})\n  |> map(fn: (r) => ({ r with rtt: int(v: r.rtt/1000.0) }))\n  |> group(columns: [\"_time\", \"device\"])\n  |> mean()\n  |> group()\n  |> rename(columns: {device: \"_field\"})\n\nping = from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Ping\")\n  |> filter(fn: (r) => r[\"_field\"] == \"rtt\")\n  |> filter(fn: (r) => r._value < 1000)\n  |> filter(fn: (r) => r[\"device\"] =~ /^${device:regex}/)\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> drop(columns: [\"icmp_seq\", \"imsi\", \"imei\"])\n\n\nunion(tables: [ping, iperf3])\n    |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> sort(columns: [\"_time\"])\n",
              "refId": "B"
            }
          ],
          "title": "RTT",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "decimals": 2,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red"
                  }
                ]
              },
              "unit": "ms"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 12,
            "w": 12,
            "x": 12,
            "y": 41
          },
          "id": 61,
          "options": {
            "complementary": false,
            "linewidth": 3,
            "scaling": 1,
            "showThresholds": false,
            "showXGrid": true,
            "showXThresholds": false,
            "showYGrid": true,
            "showYThresholds": false,
            "thresholds": {
              "lowerLabel": "",
              "upper": 20,
              "upperLabel": "20ms",
              "upperLanel": ""
            },
            "xAxisExtents": {
              "max": 100,
              "min": 0.1
            },
            "xAxisTitle": {
              "showxoffset": false,
              "showyoffset": true,
              "text": "ms",
              "textSize": 1,
              "yoffset": 30
            },
            "xMargins": {
              "lower": 40,
              "upper": 10
            },
            "xthresholds": {
              "lowerLabel": "",
              "upperLanel": ""
            },
            "yAxisExtents": {
              "max": "",
              "min": ""
            },
            "yAxisTitle": {
              "showxoffset": true,
              "showyoffset": false,
              "text": "",
              "textSize": 12,
              "xoffset": 30
            },
            "yMargins": {
              "lower": 40,
              "upper": 10
            },
            "ythresholds": {
              "lowerLabel": "",
              "upperLanel": ""
            }
          },
          "pluginVersion": "10.0.0",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "hide": false,
              "query": "iperf3 = from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Iperf3\")\n  |> filter(fn: (r) => r[\"_field\"] == \"rtt\")\n  |> filter(fn: (r) => r[\"device\"] =~ /${device:regex}/)\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"sender\"] == \"true\")\n  |> drop(columns: [\"socket\"])\n  |> aggregateWindow(every: ${Interval}, fn: mean, createEmpty: true)\n  |> map(fn: (r) => ({ r with _value: int(v: r._value/1000.0) }))\n\n\nping = from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Ping\")\n  |> filter(fn: (r) => r[\"_field\"] == \"rtt\")\n  |> filter(fn: (r) => r[\"device\"] =~ /${device:regex}/)\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> drop(columns: [\"icmp_seq\", \"imsi\", \"imei\"])\n  |> aggregateWindow(every: ${Interval}, fn: mean, createEmpty: true)\n \n\nunion(tables: [ping, iperf3])\n    |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> sort(columns: [\"_time\"])",
              "refId": "B"
            }
          ],
          "title": "RTT CDF",
          "type": "sebastiangunreben-cdf-panel"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "continuous-GrYlRd",
                "seriesBy": "last"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "pointSize": {
                  "fixed": 1
                },
                "scaleDistribution": {
                  "type": "linear"
                },
                "show": "points"
              },
              "decimals": 2,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red"
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "ICMP SEQ"
                },
                "properties": [
                  {
                    "id": "decimals",
                    "value": 0
                  },
                  {
                    "id": "unit",
                    "value": "none"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "RTT"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "ms"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 13,
            "w": 24,
            "x": 0,
            "y": 53
          },
          "id": 60,
          "maxPerRow": 6,
          "options": {
            "legend": {
              "calcs": [
                "min",
                "max",
                "mean"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "series": [
              {
                "name": "RTT",
                "pointColor": {
                  "field": "RTT"
                },
                "pointSize": {
                  "fixed": 5,
                  "max": 50,
                  "min": 1
                },
                "x": "ICMP SEQ",
                "y": "RTT"
              }
            ],
            "seriesMapping": "manual",
            "tooltip": {
              "maxHeight": 600,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.0",
          "repeat": "device",
          "repeatDirection": "h",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "hide": false,
              "query": "rtt = from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Ping\")\n  |> filter(fn: (r) => r[\"_field\"] == \"rtt\")\n  |> filter(fn: (r) => r._value < 1000)\n  |> filter(fn: (r) => r[\"device\"] =~ /^${device:regex}/)\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n\nicmp_seq = from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Ping\")\n  |> filter(fn: (r) => r[\"_field\"] == \"icmp_seq\")\n  |> filter(fn: (r) => r[\"device\"] =~ /^${device:regex}/)\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")  \n\n\nunion(tables: [rtt, icmp_seq])\n    |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")   \n    |> group()\n    |> keep(columns: [\"rtt\", \"device\", \"icmp_seq\", \"toHost\", \"_time\"])\n    |> rename(columns: {rtt:\"RTT\", icmp_seq:\"ICMP SEQ\", toHost:\"Target Host\", _time:\"Time\"})\n  \n",
              "refId": "B"
            }
          ],
          "title": "RTT $device",
          "type": "xychart"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "text",
                "mode": "palette-classic",
                "seriesBy": "max"
              },
              "custom": {
                "fillOpacity": 80,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineWidth": 1,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                }
              },
              "displayName": "${__series.name} - ${__field.labels.toHost} - ${__field.labels.device}",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red"
                  }
                ]
              },
              "unit": "ms"
            },
            "overrides": [
              {
                "__systemRef": "hideSeriesFrom",
                "matcher": {
                  "id": "byNames",
                  "options": {
                    "mode": "exclude",
                    "names": [
                      "Ping - 10.30.106.23 - A2",
                      "Ping - 10.30.106.23 - cm4pi0",
                      "Ping - 10.30.106.23 - A8"
                    ],
                    "prefix": "All except:",
                    "readOnly": true
                  }
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": false,
                      "tooltip": false,
                      "viz": false
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 66
          },
          "id": 59,
          "maxPerRow": 6,
          "options": {
            "bucketOffset": 0,
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            }
          },
          "pluginVersion": "10.0.0",
          "repeat": "device",
          "repeatDirection": "h",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "hide": true,
              "query": "iperf3 = from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Iperf3\")\n  |> filter(fn: (r) => r[\"_field\"] == \"rtt\")\n  |> filter(fn: (r) => r[\"device\"] =~ /^${device:regex}/)\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> filter(fn: (r) => r[\"sender\"] == \"true\")\n  |> drop(columns: [\"socket\", \"ismi\", \"imei\"])\n  |> map(fn: (r) => ({ r with rtt: int(v: r.rtt/1000.0) }))\n  |> rename(columns: {\"connectingToHost\":\"toHost\"})\n\nping = from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Ping\")\n  |> filter(fn: (r) => r[\"_field\"] == \"rtt\")\n  |> filter(fn: (r) => r._value < 1000)\n  |> filter(fn: (r) => r[\"device\"] =~ /^${device:regex}/)\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> drop(columns: [\"icmp_seq\", \"ismi\", \"imei\"])\n  \n \n\nunion(tables: [ping, iperf3])\n    |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> sort(columns: [\"_time\"])\n",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "hide": false,
              "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Ping\")\n  |> filter(fn: (r) => r[\"_field\"] == \"rtt\")\n  |> filter(fn: (r) => r._value < 1000)\n  |> filter(fn: (r) => r[\"device\"] =~ /^${device:regex}/)\n  |> filter(fn: (r) => r[\"measurement_name\"] == \"${data_source}\")\n  |> drop(columns: [\"icmp_seq\"])\n",
              "refId": "A"
            }
          ],
          "title": "RTT $device",
          "type": "histogram"
        }
      ],
      "title": "RTT",
      "type": "row"
    }
  ],
  "refresh": "",
  "schemaVersion": 39,
  "tags": [
    "FINAL"
  ],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "buckets()",
        "hide": 0,
        "includeAll": false,
        "label": "Bucket",
        "multi": false,
        "name": "bucket",
        "options": [],
        "query": "buckets()",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "customTagValues = (bucket, tag, predicate=(r) => true, start=v.timeRangeStart, stop=v.timeRangeStop) =>\n  from(bucket: bucket)\n    |> range(start: start, stop: stop)\n    |> filter(fn: predicate)\n    |> keep(columns: [tag])\n    |> group()\n    |> distinct(column: tag)\n\ncustomTagValues(bucket: \"${bucket}\", tag: \"measurement_name\")",
        "hide": 0,
        "includeAll": false,
        "label": "Measurement",
        "multi": false,
        "name": "data_source",
        "options": [],
        "query": "customTagValues = (bucket, tag, predicate=(r) => true, start=v.timeRangeStart, stop=v.timeRangeStop) =>\n  from(bucket: bucket)\n    |> range(start: start, stop: stop)\n    |> filter(fn: predicate)\n    |> keep(columns: [tag])\n    |> group()\n    |> distinct(column: tag)\n\ncustomTagValues(bucket: \"${bucket}\", tag: \"measurement_name\")",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "customTagValues = (bucket, tag, predicate=(r) => true, start=v.timeRangeStart, stop=v.timeRangeStop) =>\n  from(bucket: bucket)\n    |> range(start: start, stop: stop)\n    |> filter(fn: predicate)\n    |> keep(columns: [tag])\n    |> group()\n    |> distinct(column: tag)\n\ncustomTagValues(bucket: \"${bucket}\", tag: \"device\")",
        "description": "Choose Device",
        "hide": 0,
        "includeAll": false,
        "label": "Device",
        "multi": true,
        "name": "device",
        "options": [],
        "query": "customTagValues = (bucket, tag, predicate=(r) => true, start=v.timeRangeStart, stop=v.timeRangeStop) =>\n  from(bucket: bucket)\n    |> range(start: start, stop: stop)\n    |> filter(fn: predicate)\n    |> keep(columns: [tag])\n    |> group()\n    |> distinct(column: tag)\n\ncustomTagValues(bucket: \"${bucket}\", tag: \"device\")",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "auto": true,
        "auto_count": 500,
        "auto_min": "1s",
        "current": {
          "selected": false,
          "text": "auto",
          "value": "$__auto_interval_Interval"
        },
        "hide": 0,
        "name": "Interval",
        "options": [
          {
            "selected": true,
            "text": "auto",
            "value": "$__auto_interval_Interval"
          },
          {
            "selected": false,
            "text": "200ms",
            "value": "200ms"
          },
          {
            "selected": false,
            "text": "1s",
            "value": "1s"
          },
          {
            "selected": false,
            "text": "2s",
            "value": "2s"
          },
          {
            "selected": false,
            "text": "5s",
            "value": "5s"
          },
          {
            "selected": false,
            "text": "10s",
            "value": "10s"
          },
          {
            "selected": false,
            "text": "1m",
            "value": "1m"
          },
          {
            "selected": false,
            "text": "10m",
            "value": "10m"
          }
        ],
        "query": "200ms,1s,2s,5s,10s,1m,10m",
        "queryValue": "",
        "refresh": 2,
        "skipUrlSync": false,
        "type": "interval"
      }
    ]
  },
  "time": {
    "from": "now-15m",
    "to": "now"
  },
  "timeRangeUpdatedDuringEditOrView": false,
  "timepicker": {
    "hidden": false,
    "nowDelay": "",
    "refresh_intervals": [
      "500ms",
      "1s",
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ],
    "type": "timepicker"
  },
  "timezone": "browser",
  "title": "Detail - WiFi",
  "uid": "d738fce4-722f-47d4-8163-76b135642523",
  "version": 5,
  "weekStart": "monday"
}